AWSTemplateFormatVersion: "2010-09-09"
Transform: 'AWS::Serverless-2016-10-31'

Parameters:
  StunningDisco:
    Type: String
  StunningDiscoRootResource:
    Type: String
  s3Credential:
    Type: String
  domainName:
    Type: String
  rootEndpointUri:
    Type: String

Resources:
  StunningDiscoRootEndpoint:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StunningDisco
      ResourceId: !Ref StunningDiscoRootResource
      HttpMethod: "GET"
      AuthorizationType: CUSTOM
      AuthorizerId: !ImportValue StunningDiscoAuthorizer
      OperationName: "Root path"
      Integration:
        Type: "AWS"
        Credentials: !Ref s3Credential
        IntegrationHttpMethod: "GET"
        RequestTemplates:
          "text/html": "#set($allParams = $input.params())
{
\"body-json\" : $input.json('$'),
    \"headers\": {
      \"key-header\" : \"$util.escapeJavaScript($context.authorizer.key)\",
      #foreach($param in $input.params().header.keySet())
      \"$param\": \"$util.escapeJavaScript($input.params().header.get($param))\"
        #if($foreach.hasNext),#end
        #end
    }
}"
        Uri: !Ref rootEndpointUri
        PassthroughBehavior: WHEN_NO_MATCH
        IntegrationResponses:
          - StatusCode: 200
            ResponseParameters: {"method.response.header.principalId": "context.authorizer.principalId"}
      MethodResponses:
        - StatusCode: 200
          ResponseModels: { "text/html": "Empty" }
          ResponseParameters: {"method.response.header.principalId": true}

  StaticResource:
    Type: AWS::ApiGateway::Resource
    Properties:
      ParentId: !Ref StunningDiscoRootResource
      PathPart: static
      RestApiId: !Ref StunningDisco

  StaticProxyResource:
    Type: AWS::ApiGateway::Resource
    DependsOn: StaticResource
    Properties:
      ParentId: !Ref StaticResource
      PathPart: "{proxy+}"
      RestApiId: !Ref StunningDisco

  StaticProxyEndpoint:
    Type: AWS::ApiGateway::Method
    Properties:
      RestApiId: !Ref StunningDisco
      ResourceId: !Ref StaticProxyResource
      HttpMethod: GET
      AuthorizationType: CUSTOM
      AuthorizerId: !ImportValue StunningDiscoAuthorizer
      OperationName: "Static resource proxy endpoint"
      RequestParameters:
        method.request.path.proxy: true
      Integration:
        Type: "AWS"
        Credentials: !Ref s3Credential
        IntegrationHttpMethod: "GET"
        Uri: !Sub arn:aws:apigateway:us-east-1:s3:path/${domainName}/{proxy}
        RequestParameters:
          integration.request.path.proxy: method.request.path.proxy
        IntegrationResponses:
          - StatusCode: 200
      MethodResponses:
        - StatusCode: 200
          ResponseModels: { "text/html": "Empty", "image/png": "Empty" }